version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:16.6-alpine
    container_name: rexi-postgres
    environment:
      POSTGRES_DB: rexi_erp
      POSTGRES_USER: rexi
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/master:/docker-entrypoint-initdb.d
    networks:
      - rexi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rexi -d rexi_erp"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7.2.5-alpine
    container_name: rexi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rexi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

  rabbitmq:
    image: rabbitmq:3.13.6-management-alpine
    container_name: rexi-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - rexi-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Core Services (Placeholder services for now)
  authentication-service:
    build:
      context: ../../
      dockerfile: cmd/authentication-service/Dockerfile
    container_name: rexi-auth-service
    environment:
      APP_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rexi_erp
      DB_USER: rexi
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      JWT_SECRET: your-super-secret-jwt-key-for-development-only
    ports:
      - "8001:8001"
    networks:
      - rexi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  inventory-service:
    build:
      context: ../../
      dockerfile: cmd/inventory-service/Dockerfile
    container_name: rexi-inventory-service
    environment:
      APP_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rexi_erp
      DB_USER: rexi
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "8002:8002"
    networks:
      - rexi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  accounting-service:
    build:
      context: ../../
      dockerfile: cmd/accounting-service/Dockerfile
    container_name: rexi-accounting-service
    environment:
      APP_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rexi_erp
      DB_USER: rexi
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "8003:8003"
    networks:
      - rexi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  hr-service:
    build:
      context: ../../
      dockerfile: cmd/hr-service/Dockerfile
    container_name: rexi-hr-service
    environment:
      APP_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rexi_erp
      DB_USER: rexi
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      BPJS_API_URL: https://api.bpjs-kesehatan.go.id
    ports:
      - "8004:8004"
    networks:
      - rexi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  crm-service:
    build:
      context: ../../
      dockerfile: cmd/crm-service/Dockerfile
    container_name: rexi-crm-service
    environment:
      APP_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rexi_erp
      DB_USER: rexi
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "8005:8005"
    networks:
      - rexi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  notification-service:
    build:
      context: ../../
      dockerfile: cmd/notification-service/Dockerfile
    container_name: rexi-notification-service
    environment:
      APP_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rexi_erp
      DB_USER: rexi
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      SMS_GATEWAY_URL: https://api.sms-gateway.com
      EMAIL_GATEWAY_URL: https://api.email-gateway.com
    ports:
      - "8006:8006"
    networks:
      - rexi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  integration-service:
    build:
      context: ../../
      dockerfile: cmd/integration-service/Dockerfile
    container_name: rexi-integration-service
    environment:
      APP_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: rexi_erp
      DB_USER: rexi
      DB_PASSWORD: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      EFAKTUR_API_URL: https://api.efaktur.pajak.go.id
      EINVOICE_API_URL: https://api.einvoice.pajak.go.id
    ports:
      - "8007:8007"
    networks:
      - rexi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  # API Gateway
  api-gateway:
    image: nginx:1.25.5-alpine
    container_name: rexi-api-gateway
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - rexi-network
    depends_on:
      - authentication-service
      - inventory-service
      - accounting-service
      - hr-service
      - crm-service
      - notification-service
      - integration-service
    restart: unless-stopped

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:v2.53.2
    container_name: rexi-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - rexi-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.1.0
    container_name: rexi-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - rexi-network
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  rexi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16